"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from latitudesh_python_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class CreateTagType(str, Enum):
    TAGS = "tags"


class CreateTagAttributesTypedDict(TypedDict):
    name: NotRequired[str]
    r"""Name of the Tag"""
    description: NotRequired[str]
    r"""Description of the Tag"""
    color: NotRequired[str]
    r"""Color of the Tag"""


class CreateTagAttributes(BaseModel):
    name: Optional[str] = None
    r"""Name of the Tag"""

    description: Optional[str] = None
    r"""Description of the Tag"""

    color: Optional[str] = "#ffffff"
    r"""Color of the Tag"""


class CreateTagDataTypedDict(TypedDict):
    type: NotRequired[CreateTagType]
    attributes: NotRequired[CreateTagAttributesTypedDict]


class CreateTagData(BaseModel):
    type: Optional[CreateTagType] = None

    attributes: Optional[CreateTagAttributes] = None


class CreateTagRequestBodyTypedDict(TypedDict):
    data: NotRequired[CreateTagDataTypedDict]


class CreateTagRequestBody(BaseModel):
    data: Optional[CreateTagData] = None
